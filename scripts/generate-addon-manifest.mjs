import fs from 'fs';
import path from 'path';

let code = '\nexport default {\n';

fs.readdirSync('addons').forEach(addonId => {
    const basePath = path.resolve('addons', addonId);
    const manifest = JSON.parse(fs.readFileSync(
        path.resolve(basePath, 'addons.json'),
        {encoding: 'utf8'}
    ));
    code += `    ${JSON.stringify(addonId)}: {\n`;
    code += `       id: ${JSON.stringify(addonId)},\n`;
    code += `       name: ${JSON.stringify(manifest.name)},\n`;
    code += `       description: ${JSON.stringify(manifest.description)},\n`;
    code += `       required: ${JSON.stringify(manifest.required ?? [])},\n`;
    code += `       dynamicEnable: ${!!manifest.dynamicEnable},\n`;
    code += `       dynamicDisable: ${!!manifest.dynamicDisable},\n`;
    code += `       enabledByDefault: ${!!manifest.enabledByDefault},\n`;
    code += `       userscripts: [\n`;
    if (manifest.userscripts) {
        for (const script of manifest.userscripts) {
            const scriptName = `script_${addonId.replace(/[.-]/g, '_')}_${script.url.replace(/[.-]/g, '_')}`;
            code = `import ${scriptName} from '../addons/${addonId}/${script.url}';\n` + code;
            code += `           {\n`
            code += `               func: ${scriptName},\n`;
            code += `               matches: ${JSON.stringify(script.matches)},\n`;
            code += `               runAtComplete: ${!!script.runAtComplete}\n`;
            code += `           },\n`;
        }
    }
    code += `       ],\n`;
    code += `       userstyles: [\n`;
    if (manifest.userstyles) {
        for (const style of manifest.userstyles) {
            const styleName = `style_${addonId.replace(/[.-]/g, '_')}_${style.url.replace(/[.-]/g, '_')}`;
            code = `import ${styleName} from '../addons/${addonId}/${style.url}';\n` + code;
            code += `           {\n`
            code += `               stylesheet: ${styleName},\n`;
            code += `               matches: ${JSON.stringify(style.matches)}\n`;
            code += `           },\n`;
        }
    }
    code += `       ],\n`;
    code += `       settings: ${JSON.stringify(manifest.settings ?? {})}\n`;
    code += `    },\n`;
});

code = '// Generated by scripts/generate-addon-manifest.mjs\n' + code;
code += '};\n';

fs.writeFileSync('src/addons.ts', code);
